{{!-- ****SERVICE SECTION**** --}}
{{regmap 'typephp' 'boolean:bool;integer,integer64:int;float:float;string:string;enums:int' ~}}

<?php
/*
* Generate info - version php: {{vars.ver}}
*/
{{!-- ****IMPORT SECTION**** --}}
namespace {{replace path '/' "\^" 'firstupper'}};

{{#each imports}}
use {{replace file '/' "\^"  'firstupper'}}\\{{type}};
{{/each}}
{{!-- ****CONST SECTION**** --}}
{{#each consts}}
{{#if description}}
/**
* {{{ description }}}
*/

{{/if}}
interface {{name}}
{
  {{#each items }}
  {{#if description}}
  /**
  * @var {{map 'typephp' type}} {{{ description }}}
  */
  {{/if}}
  const {{name}} = {{#val value "'"}}{{/val}};
  {{/each}}
}

{{/each}}
{{!-- ****ENUMS SECTION**** --}}
{{#each enums}}
{{#if description}}
/**
* {{{ description }}}
*/
{{/if}}
interface {{name}}
{
  {{#each items }}
  {{#if description}}
  /**
  * @var {{map 'typephp' type}} {{{ description }}}
  */
  {{/if}}
  const {{name}} = {{#val value "'"}}{{/val}};
  {{/each}}
}

{{/each}}
{{!-- ****MODEL SECTION**** --}}
{{#each models}}
/**
* {{{ description }}}
{{#each items}}
* @property {{map 'typephp' type}} ${{name}} {{#if required}}Required. {{else}}Optional. {{/if}}{{#ifenum type}}Use interface {{type}}. {{/ifenum}}{{{ description }}}
{{/each}}
*/
interface {{ name }}{{#if basetype}} extends {{basetype}} {{/if}}
{
  /**
  * PHP Magic Methods
  */
  function __get($val);
}

{{/each}}
{{!-- ****CONTRACT SECTION**** --}}
{{#each contracts}}
{{#if description}}
/**
* {{{ description }}}
*/
{{/if}}
interface {{ name }}{{#if basetype}} extends {{basetype}} {{/if}}
{
  {{#each methods}}
  /**
  * {{{ description }}}
  *
  {{#each args}}
  * @param {{map 'typephp' type}} ${{name}} {{description}}
  {{/each}}
  {{#if result}}* @return {{map 'typephp' result.type}} {{result.description}}</returns>{{/if}}
  */
  {{name}}({{#each args}}{{#if @index}}, {{/if}}{{map 'typephp' type}} ${{name}}{{/each}}){{#resphp result @root.vars.ver}}: {{map 'typephp' result.type}}{{/resphp}};
  {{/each}}
}
{{/each}}
